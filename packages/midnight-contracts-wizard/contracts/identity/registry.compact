pragma language_version >= 0.16.0;

import CompactStandardLibrary;

/**
 * @dev Exported types
 * @notice Makes CurvePoint available to external consumers for signature verification
 */
export { CurvePoint }

/**
 * @dev Wallet public key
 * @notice Stores the user's Zswap coin public key for receiving payments
 */
export ledger walletPublicKey: ZswapCoinPublicKey;

/**
 * @dev Signing public key
 * @notice Stores the user's signing public key for credential verification
 */
export ledger signingPublicKey: CurvePoint;

/**
 * @dev Register user circuit
 * @notice Allows users to register their wallet and signing public keys on-chain
 * @param signingKey The user's public signing key for credential verification
 */
export circuit register(signingKey: CurvePoint): [] {
  walletPublicKey = ownPublicKey();
  signingPublicKey = disclose(signingKey);
}